{"version":3,"sources":["hooks/useVideo.js","components/Video/constant.js","components/Video/helper.js","components/Video/Video.jsx","App.js","index.js"],"names":["useVideo","video","useState","mediaStream","setMediaStream","useEffect","a","navigator","getUserMedia","stream","current","srcObject","err","console","error","getTracks","forEach","track","stop","enableStream","displaySize","width","height","showExpressions","text","expressions","max","Object","entries","reduce","acc","expressionValue","textContent","canvas","faceapi","options","TinyFaceDetectorOptions","matchDimensions","setInterval","detectAllFaces","withFaceExpressions","detections","resizedDetections","resizeResults","getContext","clearRect","draw","drawDetections","length","Video","canvasRef","useRef","textRef","videoRef","className","ref","onCanPlay","Promise","all","tinyFaceDetector","loadFromUri","faceExpressionNet","then","play","addEventListener","detectFace","autoPlay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iXAkCeA,EAhCE,SAACC,GAAW,IAAD,EACYC,qBADZ,mBACnBC,EADmB,KACNC,EADM,KA6B1B,OA1BAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAEyBC,UAAUC,aAC7B,CAAEP,OAAO,IACT,SAACQ,GACCR,EAAMS,QAAQC,UAAYF,KAE5B,SAACG,GAAD,OAASC,QAAQC,MAAMF,MAP7B,OAEUH,EAFV,OASIL,EAAeK,GATnB,gDAWII,QAAQC,MAAR,MAXJ,0DADc,sBAed,GAAKX,EAGH,OAAO,WACLA,EAAYY,YAAYC,SAAQ,SAACC,GAC/BA,EAAMC,YApBG,WAAD,wBAgBZC,KAQD,CAAChB,EAAaF,IAEVE,GC/BIiB,G,MAAc,CACzBC,MAAO,IACPC,OAAQ,MCFH,SAASC,EAAT,EAA0CC,GAAO,IAAtBC,EAAqB,EAArBA,YAE1BC,EADMC,OAAOC,QAAQH,GACXI,QAAO,SAACC,EAAKC,GAC3B,OAAOD,EAAI,GAAKC,EAAgB,GAAKD,EAAMC,IAC1C,IAEHP,EAAKd,QAAQsB,YAAcN,EAAI,G,4CAG1B,WAA0BO,EAAQb,EAAac,EAASV,EAAMvB,GAA9D,eAAAK,EAAA,sDACC6B,EAAU,IAAID,EAAQE,wBAE5BF,EAAQG,gBAAgBJ,EAAOvB,QAASU,GAExCkB,YAAW,sBAAC,8BAAAhC,EAAA,sEACe4B,EACtBK,eAAetC,EAAMS,QAASyB,GAC9BK,sBAHO,OACJC,EADI,OAKJC,EAAoBR,EAAQS,cAAcF,EAAYrB,GAE5Da,EAAOvB,QACJkC,WAAW,MACXC,UAAU,EAAG,EAAGZ,EAAOvB,QAAQW,MAAOY,EAAOvB,QAAQY,QAExDY,EAAQY,KAAKC,eAAed,EAAOvB,QAASgC,GAExCD,EAAWO,QACbzB,EAAgBkB,EAAW,GAAIjB,GAdvB,2CAgBT,KArBE,4C,sBCFP,IA+CeyB,EA/CD,WACZ,IAAMC,EAAYC,mBACZC,EAAUD,mBACVE,EAAWF,mBAEX1C,EAAST,EAASqD,GAiBxB,OAfI5C,GAAU4C,EAAS3C,UAAY2C,EAAS3C,QAAQC,YAClD0C,EAAS3C,QAAQC,UAAYF,GAe7B,oCACE,yBAAK6C,UAAU,WACb,4BACEC,IAAKL,EACLI,UAAU,SACVjC,MAAOD,EAAYC,MACnBC,OAAQF,EAAYE,SAEtB,2BACEgC,UAAU,QACVC,IAAKF,EACLG,UAvBR,WACEC,QAAQC,IAAI,CACVxB,OAAayB,iBAAiBC,YAAY,UAC1C1B,OAAa2B,kBAAkBD,YAAY,YAC1CE,MAAK,kBAAMT,EAAS3C,QAAQqD,UAE/BV,EAAS3C,QAAQsD,iBAAiB,QAAQ,kBDfvC,SAAP,0CCgBMC,CAAWf,EAAW9B,EAAac,EAASkB,EAASC,OAiBjDa,UAAQ,EACR7C,MAAOD,EAAYC,MACnBC,OAAQF,EAAYE,UAGxB,yBAAKiC,IAAKH,EAASE,UAAU,eAA7B,mB,MCnCSa,MARf,WACE,OACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,QCFNc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.411ddfc9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useVideo = (video) => {\n  const [mediaStream, setMediaStream] = useState();\n\n  useEffect(() => {\n    async function enableStream() {\n      try {\n        const stream = await navigator.getUserMedia(\n          { video: true },\n          (stream) => {\n            video.current.srcObject = stream;\n          },\n          (err) => console.error(err)\n        );\n        setMediaStream(stream);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    if (!mediaStream) {\n      enableStream();\n    } else {\n      return function cleanup() {\n        mediaStream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      };\n    }\n  }, [mediaStream, video]);\n\n  return mediaStream;\n};\n\nexport default useVideo;\n","export const displaySize = {\n  width: 720,\n  height: 540,\n};\n","export function showExpressions({ expressions }, text) {\n  const arr = Object.entries(expressions);\n  const max = arr.reduce((acc, expressionValue) => {\n    return acc[1] > expressionValue[1] ? acc : expressionValue;\n  }, []);\n\n  text.current.textContent = max[0];\n}\n\nexport async function detectFace(canvas, displaySize, faceapi, text, video) {\n  const options = new faceapi.TinyFaceDetectorOptions();\n\n  faceapi.matchDimensions(canvas.current, displaySize);\n\n  setInterval(async () => {\n    const detections = await faceapi\n      .detectAllFaces(video.current, options)\n      .withFaceExpressions();\n\n    const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n    canvas.current\n      .getContext('2d')\n      .clearRect(0, 0, canvas.current.width, canvas.current.height);\n\n    faceapi.draw.drawDetections(canvas.current, resizedDetections);\n\n    if (detections.length) {\n      showExpressions(detections[0], text);\n    }\n  }, 200);\n}\n","import React, { useRef } from 'react';\nimport * as faceapi from 'face-api.js';\nimport useVideo from '../../hooks/useVideo.js';\nimport './Video.css';\nimport { displaySize } from './constant';\nimport { detectFace } from './helper';\n\nconst Video = () => {\n  const canvasRef = useRef();\n  const textRef = useRef();\n  const videoRef = useRef();\n\n  const stream = useVideo(videoRef);\n\n  if (stream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = stream;\n  }\n\n  function handleCanPlay() {\n    Promise.all([\n      faceapi.nets.tinyFaceDetector.loadFromUri('models'),\n      faceapi.nets.faceExpressionNet.loadFromUri('models'),\n    ]).then(() => videoRef.current.play());\n\n    videoRef.current.addEventListener('play', () =>\n      detectFace(canvasRef, displaySize, faceapi, textRef, videoRef)\n    );\n  }\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <canvas\n          ref={canvasRef}\n          className=\"canvas\"\n          width={displaySize.width}\n          height={displaySize.height}\n        ></canvas>\n        <video\n          className=\"video\"\n          ref={videoRef}\n          onCanPlay={handleCanPlay}\n          autoPlay\n          width={displaySize.width}\n          height={displaySize.height}\n        ></video>\n      </div>\n      <div ref={textRef} className=\"emotionText\">\n        Wait a second\n      </div>\n    </>\n  );\n};\n\nexport default Video;\n","import React from 'react';\nimport Video from './components/Video/Video';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Video />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}